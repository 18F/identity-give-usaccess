---
# This workflow will run unit tests and deploy the application to a
# target environment

name: Deploy

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths-ignore:
      - '**.md'  # All markdown files in the repository

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest requests
      - name: Test with Pytest unit tests
        run: |
          export DEBUG=True
          python -m pytest

  deploy:
    if: github.repository_owner == '18F'
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install CloudFoundry CLI
        run: |
          curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github" | sudo tar -zx --directory=/usr/local/bin
          cf --version

      - name: Setup CF CLI auth
        run: |
          cf api https://api.fr.cloud.gov
          cf auth ${{ secrets.CF_USERNAME }} ${{ secrets.CF_PASSWORD }}

      - name: Determine deployment target
        id: deployment-target
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          # Use the Github reference to determine environment values
          if [[ $GITHUB_REF == "refs/heads/main" ]]; then
              # Pushes to main are deployed to dev
              target_environment=give-dev
              environment_name=dev
          elif [[ $GITHUB_REF =~ refs/tags/* ]]; then
              # Tags on main are deployed to test
              target_environment=give-test
              environment_name=test
          else
              echo 'Unknown deployment target'
              exit 1
          fi

          # Set the outputs for this step
          echo "::set-output name=SPACE::$target_environment"
          echo "::set-output name=ENVIRONMENT_NAME::$environment_name"
          echo "Deploying to $target_environment"

      - name: Set CF CLI Target
        run: cf target -o ${{ secrets.CF_ORG }} -s ${{ steps.deployment-target.outputs.SPACE }}

      - name: Deploy application
        run: cf push --vars-file vars.yaml
          --var ENVIRONMENT_NAME=${{ steps.deployment-target.outputs.ENVIRONMENT_NAME }}
          --strategy rolling
